# Generated by Django 3.0.8 on 2021-07-12 05:15

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='Nombre de usuario')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo electrónico')),
                ('nombres', models.CharField(blank=True, max_length=200, null=True, verbose_name=' Nombres')),
                ('apellidos', models.CharField(blank=True, max_length=200, null=True, verbose_name='Apellidos')),
                ('rut', models.CharField(blank=True, max_length=12, null=True, verbose_name='Rut')),
                ('ciudad', models.CharField(blank=True, max_length=30, null=True, verbose_name='Ciudad')),
                ('direccion', models.CharField(blank=True, max_length=30, null=True, verbose_name='Dirección')),
                ('num_casa', models.CharField(blank=True, max_length=5, null=True, verbose_name='Número de casa')),
                ('telefono', models.CharField(blank=True, max_length=12, null=True, verbose_name='Teléfono')),
                ('nacionalidad', models.CharField(blank=True, max_length=20, null=True, verbose_name='Nacionalidad')),
                ('fecha_naci', models.DateField(blank=True, null=True, verbose_name='Fecha de nacimiento')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
